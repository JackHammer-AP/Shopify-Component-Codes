{% schema %}
{
  "name": "Scrolling Section",
  "presets": [
    {
      "name": "Sustain"
    }
  ],
  "settings": [
    {
      "type": "range",
      "id": "year_font_size",
      "label": "Year Font Size",
      "min": 10,
      "max": 100,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "label": "Heading Font Size",
      "min": 10,
      "max": 80,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "summary_font_size",
      "label": "Summary Font Size",
      "min": 10,
      "max": 50,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "checkbox",
      "id": "show_vertical_line",
      "label": "Show Vertical Line Between Items",
      "default": true
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button Hover Color",
      "default": "#ff0000"
    },
    {
      "type": "select",
      "id": "button_font_family",
      "label": "Button Font Family",
      "options": [
        { "value": "primary", "label": "Primary Font" },
        { "value": "secondary", "label": "Secondary Font" }
      ],
      "default": "primary"
    },
    {
      "type": "select",
      "id": "arrow_position",
      "label": "Arrow Position",
      "options": [
        { "value": "inside", "label": "Inside" },
        { "value": "outside", "label": "Outside" }
      ],
      "default": "outside"
    },
    {
      "type": "range",
      "id": "item_size",
      "label": "Item Size",
      "min": 30,
      "max": 100,
      "default": 45,
      
    },{
      "type": "range",
      "id": "arrow_overlap",
      "label": "Arrow Overlap",
      "min": 30,
      "max": 100,
      "default": 50,
      
    },{
      "type": "range",
      "id": "section_tp",
      "label": "Section Margin",
      "min": 20,
      "max": 100,
      "default": 30,
      
    },{
  "type": "range",
  "id": "image_width",
  "label": "Image Width (vw)",
  "min": 30,
  "max": 100,
      "step": 10,
  "default": 50
}
  ]
}
{% endschema %}

<div class="scrolling-section">
  <button class="arrow left-arrow" data-position="{{ section.settings.arrow_position }}">&#9665;</button>
  <div class="scrolling-container">



    
    {% assign items = shop.metaobjects.metaobject_name.values  %}
  
    {% for item in items  %}



      
      <div class="scrolling-item">
        <div class="image-container">
          <img src="{{ item.thumbnail | image_url }}" alt="{{ item.heading }}">
        </div>
        <div class="text-container" style="padding: 0px 15px">
          <div class="year" style="font-size: {{ section.settings.year_font_size }}px; font-family: {{ section.settings.primary_font.family}};">
            {{ item.year }}
          </div>
          <div class="heading" style="font-size: {{ section.settings.heading_font_size }}px; font-family: {{ section.settings.secondary_font.family}};">
            {{ item.label }}
          </div>
          {% capture plain_summary %}{% endcapture %}

{% if item.summary.value.children %}
  {% for block in item.summary.value.children %}
    {% for node in block.children %}
      {% if node.type == 'text' %}
        {%- capture plain_summary -%}
          {{ plain_summary }}{{ node.value }} 
        {%- endcapture -%}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endif %}
          <div class="summary" style="font-size: {{ section.settings.summary_font_size }}px; font-family:{{ section.settings.primary_font.family}};">
            <strong>Summary:</strong> {{ plain_summary }}

<!-- {% if item.summary.value.children %}
  {% for block in item.summary.value.children %}
    {% if block.type == 'paragraph' %}
      <p>
        {% for node in block.children %}
          {% if node.type == 'text' %}
            {% if node.bold %}
              <strong>{{ node.value }}</strong>
            {% else %}
              {{ node.value }}
            {% endif %}
          {% endif %}
        {% endfor %}
      </p>
    {% endif %}
  {% endfor %}
{% endif %} -->
            
          </div>
          {% if item.file != blank %}
            <a href="{{ item.file | file_url }}" target="_blank" class="custom-button" style="background-color: {{ section.settings.button_color }}; font-family: {{ section.settings.secondary_font.family}}; margin: 15px 0px;">
              Learn More
            </a>
          {% endif %}
        </div>
        {% if section.settings.show_vertical_line and forloop.last == false %}
          <div class="vertical-line"></div>
        {% endif %}
      </div>

      
    {% endfor %}



    
  </div>
  <button class="arrow right-arrow" data-position="{{ section.settings.arrow_position }}">&#9655;</button>
</div>

<style>
  .scrolling-section {
    position: relative;
    overflow: hidden;
    white-space: wrap;
     min-height: 300px;
    margin: {{section.settings.section_tp}}px 0;
  }
  .scrolling-container {
    display: flex;
    gap: 20px;
    overflow: hidden;
     min-height: 200px;
    scroll-snap-type: x mandatory;
    scrollbar-width: none;
        margin: 0 {{ section.settings.arrow_overlap }}px;
  }
  .scrolling-item {
    display: flex;
    align-items: center;
    /* min-height: 400px; */
    scroll-snap-align: start;
    min-width: {{section.settings.item_size}}%;  
  }
  .image-container {
  display: flex;
  height: auto;
  width: auto;
}
  .image-container img {
    width:  {{ section.settings.image_width }}vw;
    height: auto;
    object-fit: contain;
  }
  .text-container {
    padding-left: 20px;
  }
  .custom-button {
    display: inline-block;
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s;
    text-decoration: none;
    color: white;
  }
  .custom-button:hover {
    background-color: {{ section.settings.button_hover_color }};
  }
  .arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.3);
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
    z-index: 10;
  }

  .arrow[data-position='inside'].left-arrow {
  left: 10px;
}
.arrow[data-position='inside'].right-arrow {
  right: 10px;
}

/* If arrow_position == outside */
.arrow[data-position='outside'].left-arrow {
  left: -40px; /* Move arrow left of the container */
}
.arrow[data-position='outside'].right-arrow {
  right: -40px; /* Move arrow right of the container */
}
  .vertical-line {
    width: 2px;
    height: 100%;
    background-color: black;
  }

/* 

/* ðŸ’» Laptop (â‰¤1440px) */
@media screen and (max-width: 1440px) {
  .scrolling-item {
    min-width: 50%;
  }
  .image-container img {
    width: 45vw;
  }
  .text-container {
    font-size: 14px;
  }
  .year {
    font-size: 22px;
  }
  .heading {
    font-size: 18px;
  }
  .summary {
    font-size: 12px;
  }
}

/* ðŸ“± Tablet (â‰¤1024px) */
@media screen and (max-width: 1024px) {
  .scrolling-item {
    flex-direction: row; 
    align-items: center;
    min-width: 100%;
  }
  .image-container img {
    width: 90vw !important; 
  }
  .text-container {
    font-size: 13px !important;
  }
  .year {
    font-size: 36px !important;
  }
  .heading {
    font-size: 28px !important;
  }
  .summary {
    font-size: 12px !important;
  }
}

/* ðŸ“² Mobile (â‰¤768px) */
@media screen and (max-width: 768px) {
  .scrolling-item {
    flex-direction: column; 
    align-items: center;
    min-width: 100%;
  }
  .image-container img {
    width: 90vw !important;
  }
  .text-container {
    font-size: 12px !important;
  }
  .year {
    font-size: 28px !important;
  }
  .heading {
    font-size: 20px !important;
  }
  .summary {
    font-size: 10px !important;
  }


  .arrow {
    padding: 8px !important;
    transform: translateY(-25%);
  }
  .arrow[data-position='outside'] {
    left: 10px !important;
    right: 10px !important;
  }
}
 */


  
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
  setTimeout(() => {
    const container = document.querySelector(".scrolling-container");
    const leftArrow = document.querySelector(".left-arrow");
    const rightArrow = document.querySelector(".right-arrow");
    const item = document.querySelector(".scrolling-item");

    if (!container || !item) {
      console.error("Error: Missing scrolling items.");
      return;
    }

    const itemWidth = item.offsetWidth + 20;
    let scrollPosition = 0;

    rightArrow.addEventListener("click", function () {
      if (scrollPosition < container.scrollWidth - container.clientWidth) {
        scrollPosition += itemWidth;
        container.scrollTo({ left: scrollPosition, behavior: "smooth" });
      }
    });

    leftArrow.addEventListener("click", function () {
      if (scrollPosition > 0) {
        scrollPosition -= itemWidth;
        container.scrollTo({ left: scrollPosition, behavior: "smooth" });
      }
    });
  }, 500); // Delay script execution
});

</script>
